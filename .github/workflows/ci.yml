##############################
####  AUTOGENERATED       ####
####  DO NOT MODIFY!      ####
##############################
# Workflow for PR checks in module repositories
name: CI

on:
  # Start workflow on each pull request
  pull_request:

concurrency:
  # There should be only one in-progress run of this workflow at a time for a specific PR
  group: ${{ github.event.number }}
  # Cancel runs of this workflow that are currently in progess.
  cancel-in-progress: true

jobs:
  # Runs the unit test suite
  unit-tests:
    name: Run unit test suite
    # Define plenty-used variables
    env:
      # CI variables
      APP_ENV: testing
      IS_JENKINS: true
      PLENTY_ID_HASH: 1000
      WORKSPACE: ${{ github.workspace }}

      # Database variables
      DB_HOST: "127.0.0.1"
      DB_USERNAME: root
      DB_PASSWORD: test
      DB_DATABASE: mysql-test
      # Synonym database variable names (only defined because of inconsistency within plenty code)
      DB_USER: root
      DB_PASS: test
      DB_NAME: mysql-test

      # AWS environment variables
      AWS_REGION: eu-central-1
      # Uncomment following env variables if needed
      #
      # AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
      # AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
      # AWS_DDB_ACCESS_KEY_ID: ${{ secrets.AWS_DDB_ACCESS_KEY }}
      # AWS_DDB_SECRET_ACCESS_KEY: ${{ secrets.AWS_DDB_SECRET_ACCESS_KEY }}
      # AWS_DDB_CONNECTION: test
      # DYNAMODB_LOCAL_ENDPOINT: http://localhost:8085

    runs-on: ubuntu-latest

    # Start containers with specific services that are needed to run the unit test suite.
    # In this case we need mariadb and redis.
    # The used versions match the ones used in production.
    services:
      mariadb:
        # Uses a prewarmed db image here to speedup the migrations https://github.com/plentymarkets/prewarm-db
        image: ghcr.io/plentymarkets/prewarm-db:stable7
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_READ_ONLY }}
        ports:
          - 127.0.0.1:3306:3306
        env:
          MARIADB_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MARIADB_DATABASE: ${{ env.DB_DATABASE }}
      redis:
        image: redis:4.0.8
        ports:
          - 127.0.0.1:6379:6379

    steps:
      - name: Checkout github-actions repository
        uses: actions/checkout@v2
        with:
          repository: plentymarkets/github-actions
          ref: main
          token: ${{ secrets.PLENTY_ACTION_TOKEN }}
          path: .tmp/github-actions

      - name: Checkout PL PY PS
        id: branches
        uses: ./.tmp/github-actions/checkout_pl_py_ps/
        with:
          token: ${{ secrets.PLENTY_ACTION_TOKEN }}

      - name: Checkout module
        uses: actions/checkout@v2
        with:
          path: "plenty-module"

      - name: Read package name from module's composer.json
        working-directory: plenty-module
        run: |
          FULL_PACKAGE_NAME=$(jq -r ".name" ./composer.json)
          PACKAGE_NAME=${FULL_PACKAGE_NAME#"plentymarkets/"}
          echo "package name is: ${PACKAGE_NAME}"
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV

      - name: Move module to destination (pl/packages/plentymarkets/${{ env.PACKAGE_NAME }})
        run: |
          mkdir -p pl/packages/plentymarkets
          mv "plenty-module" "pl/packages/plentymarkets/${{ env.PACKAGE_NAME }}"

      # Set PHP version and install PHP if neccessary
      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.3"
        env:
          COMPOSER_TOKEN: ${{ secrets.PAT_PLENTYMONKEY_READ_ALL_REPOS }}

      # Cache dependencies to reduce traffic and cpu usage
      - name: Cache pl dependencies
        uses: actions/cache@v2
        with:
          path: "pl/vendor"
          key: ${{ runner.os }}-composer-pl-${{ hashFiles('pl/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-pl-

      # Install dependencies
      - name: Install dependencies
        # Change the path of the working directory to prevent running below script(s) in the workflow's working directory
        working-directory: pl
        # Remove locally stored Laravel files if they exist
        # Execute composer install without executing scripts defined in 'composer.json'
        # Search for modules
        # Enable OpenSSL OAuth encryption
        # Create an empty '.env' file ('autoloader' requires this file, even if it is empty)
        run: |
          rm -f bootstrap/cache/{services,packages}.php
          composer install --no-progress --no-scripts
          php artisan package:discover
          php artisan passport:keys 
          touch .env

      # Prepare the test database
      - name: Init db
        working-directory: pl
        run: |
          php artisan migrate --database=mysql-test --env=testing
          php artisan db:seed --database=mysql-test --env=testing

      - name: Build plugin api
        working-directory: pl
        run: |
          composer dump-autoload
          php artisan plugin:buildinterface --without-docs --target=./storage/plugin-interface

      - name: Sync policies
        working-directory: pl
        run: |
          php artisan authorization:collect_permissions

      - name: Install module dependencies
        working-directory: pl/packages/plentymarkets/${{ env.PACKAGE_NAME }}/
        run: |
          touch .env
          composer install --no-progress --no-scripts

      - name: Run module's unit test suite
        working-directory: pl/packages/plentymarkets/${{ env.PACKAGE_NAME }}/
        run: |
          ./vendor/bin/paratest -p2 --log-junit=testresult.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "pl/packages/plentymarkets/${{ env.PACKAGE_NAME }}/testresult.xml"
