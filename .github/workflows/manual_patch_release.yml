##############################
####  AUTOGENERATED       ####
####  DO NOT MODIFY!      ####
##############################
name: "Manual - Patch release"

on:
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        description: 'Choose branch for patch release'
        options:
          - beta7
          - early
          - stable7
        required: true
        default: 'beta7'

jobs:
  patch-release:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME_PREFIX: "auto_patch_release_"
    steps:
      - name: Checkout module
        uses: actions/checkout@v3
        with:
          path: "plenty-module"

      - name: Read package name from module's composer.json
        working-directory: plenty-module
        run: |
          FULL_PACKAGE_NAME=$(jq -r ".name" ./composer.json)
          PACKAGE_NAME=${FULL_PACKAGE_NAME#"plentymarkets/"}
          echo "package name is: ${PACKAGE_NAME}"
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV
          echo "FULL_PACKAGE_NAME=${FULL_PACKAGE_NAME}" >> $GITHUB_ENV

      - name: Checkout PL ${{ github.event.inputs.branch }}
        uses: actions/checkout@v3
        with:
          repository: "plentymarkets/php-pl"
          token: ${{ secrets.ORGA_PAT_CICD1_FULL_REPO_AND_PACKAGES }}
          ref: ${{ github.event.inputs.branch }}

      - name: Find current release version
        run: |
          COMPOSER_PACKAGE_ENTRY=$(jq -r '.packages[] | select(.name=="${{ env.FULL_PACKAGE_NAME }}")' ./composer.lock)
          COMPOSER_VERSION=$(echo "$COMPOSER_PACKAGE_ENTRY" | jq -r '.version')
          COMPOSER_REFERENCE=$(echo "$COMPOSER_PACKAGE_ENTRY" | jq -r '.source.reference')
          # Check if composer versions are parsed correctly.
          if [ "$COMPOSER_VERSION" = "" ] ; then
            echo "Could not parse composer versions."
            exit 1
          fi
          echo "OLD_VERSION=$COMPOSER_VERSION" >> $GITHUB_ENV
          echo "OLD_REFERENCE=$COMPOSER_REFERENCE" >> $GITHUB_ENV
          echo "Old version from composer: $COMPOSER_VERSION"
          echo "Old reference from composer: $COMPOSER_REFERENCE"

      - name: Parse new version
        run: |
          CLEAN_VERSION=`echo "${{ env.OLD_VERSION }}" | cut -d "v" -f 2`
          MAJOR_VERSION=`echo "$CLEAN_VERSION" | cut -d "." -f 1`
          MINOR_VERSION=`echo "$CLEAN_VERSION" | cut -d "." -f 2`
          PATCH_VERSION=`echo "$CLEAN_VERSION" | cut -d "." -f 3`
          PATCH_VERSION=$((PATCH_VERSION+1))
          NEW_VERSION="v$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: $NEW_VERSION"

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ORGA_PAT_CICD1_FULL_REPO_AND_PACKAGES }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: ${{ env.NEW_VERSION }}
          body: Manual package patch release
          target_commitish: ${{ github.event.inputs.branch }}
          draft: false
          prerelease: false

      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.ORGA_PAT_CICD1_FULL_REPO_AND_PACKAGES }}
      - name: Cache pl dependencies
        uses: actions/cache@v3
        with:
          path: "vendor"
          key: ${{ runner.os }}-composer-pl-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-pl-
      - name: Update package version in composer
        run: |
          composer update ${{ env.FULL_PACKAGE_NAME }} --no-scripts --prefer-dist --no-progress
      - name: Find updated release version/reference
        run: |
          COMPOSER_PACKAGE_ENTRY=$(jq -r '.packages[] | select(.name=="${{ env.FULL_PACKAGE_NAME }}")' ./composer.lock)
          COMPOSER_VERSION=$(echo "$COMPOSER_PACKAGE_ENTRY" | jq -r '.version')
          COMPOSER_REFERENCE=$(echo "$COMPOSER_PACKAGE_ENTRY" | jq -r '.source.reference')
          DIFF_URL="https://github.com/${{ github.repository }}/compare/${{ env.OLD_REFERENCE }}...${COMPOSER_REFERENCE}"
          echo "NEW_REFERENCE=$COMPOSER_REFERENCE" >> $GITHUB_ENV
          echo "DIFF_URL=$DIFF_URL" >> $GITHUB_ENV
          echo "New reference from composer: $NEW_REFERENCE"
          echo "Diff URL: $DIFF_URL"
      - name: Push changes to new branch
        run: |
          TIMESTAMP=`date +%s`
          BRANCH_NAME="${BRANCH_NAME_PREFIX}${{ env.PACKAGE_NAME }}_${TIMESTAMP}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git checkout -b $BRANCH_NAME
          git add composer.lock
          git add composer.json
          git commit -m "update package patch version" --author="$GITHUB_ACTOR <$GITHUB_ACTOR@users.noreply.github.com>"
          git push origin $BRANCH_NAME
      - name: Create pull request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ORGA_PAT_CICD1_FULL_REPO_AND_PACKAGES }}
          script: |
            github.rest.pulls.create({
              owner: "plentymarkets",
              repo: "php-pl",
              head: "${{ env.BRANCH_NAME }}",
              base: "${{ github.event.inputs.branch }}",
              title: "${{ env.PACKAGE_NAME }} package patch release",
              body: "${{ env.DIFF_URL }}"
            })
